@model BMSApplication.Models.Product

@{
    ViewBag.Title = "Edit";
}

<div class="span12">

    <div class="widget ">

        <div class="widget-header">
            <i class="icon-inbox"></i>
            <h3>Modify Product Information</h3>
        </div> <!-- /widget-header -->

        <div class="widget-content">

            @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <fieldset>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="control-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @{
                                List<SelectListItem> categoryList = new List<SelectListItem>();
                                categoryList.Add(new SelectListItem
                                {
                                    Text = "Shop",
                                    Value = "Shop"
                                }
                                );
                                categoryList.Add(new SelectListItem
                                {
                                    Text = "Vendor",
                                    Value = "Vendor"
                                }
                                );
                                categoryList.Add(new SelectListItem
                                {
                                    Text = "Merchandise",
                                    Value = "Merchandise"
                                }
                                );
                                categoryList.Add(new SelectListItem
                                {
                                    Text = "Rental",
                                    Value = "Rental"
                                }
                                );
                                foreach(var sl in categoryList)
                                {
                                    if(sl.Value == Model.Category)
                                    {
                                        sl.Selected = true;
                                        break;
                                    }
                                }
                            }
                            @Html.DropDownListFor(model => model.Category, categoryList, new { @class = "span6" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.Sell, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.Sell, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.Sell, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.Status)
                    @Html.HiddenFor(model => model.CreatedDate)
                    @Html.HiddenFor(model => model.CreatedBy)
                    @Html.HiddenFor(model => model.ModifyDate)
                    @Html.HiddenFor(model => model.ModifyBy)
                    @*<div class="control-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Status)
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.ModifyDate, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.ModifyDate, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.ModifyDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(model => model.ModifyBy, htmlAttributes: new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(model => model.ModifyBy, new { htmlAttributes = new { @class = "span6" } })
                            @Html.ValidationMessageFor(model => model.ModifyBy, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="control-group">
                        <div class="controls">
                            <input type="submit" value="Save" class="btn btn-success" style="width:100px" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default", @style = "width:100px" })
                        </div>
                    </div>
                </fieldset>
            }

        </div>
    </div>
</div>
<div>
    
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
